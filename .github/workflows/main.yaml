name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  linux-qmake-default:
    strategy:
      matrix:
        compiler: ['gcc-9']
        qt_versions: ["5.15.2", "6.2.0"]
        include:
          - compiler: gcc-9
            packages: gcc-9 g++-9
            env: { 'CC': 'gcc-9', 'CXX': 'g++-9' }

    runs-on: ubuntu-latest

    env: ${{ matrix.env }}

    steps:
      - uses: actions/checkout@v2

      - name: Install compiler and FFmpeg dependencies
        run: |
          sudo apt-get update &&
          sudo apt-get install -y ${{ matrix.packages }} \
                                  libavcodec-dev \
                                  libavformat-dev \
                                  libavdevice-dev \
                                  libavfilter-dev \
                                  libavformat-dev \
                                  libavutil-dev \
                                  libswresample-dev \
                                  libswscale-dev \
                                  libva-x11-2 \
                                  libva-drm2

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_versions }}

      - name: Build
        run: |
          qmake
          make CC=$CC CXX=$CXX
          make install

      - name: Test
        run: |
          cd tests/
          qmake
          make CC=$CC CXX=$CXX
          export QT_LOGGING_RULES="qt.QtAVPlayer.debug=true"
          cd auto/integration/qavdemuxer
          ./tst_qavdemuxer --platform minimal
          cd ../
          cd qavplayer
          ./tst_qavplayer --platform minimal -maxwarnings 100000

  macos-qmake-default:
    strategy:
      matrix:
        compiler: ['clang-9']
        include:
          - compiler: clang-9
            packages: llvm@9
            env: { 'CC': 'clang', 'CXX': 'clang++', 'CXXFLAGS': '-DNS_FORMAT_ARGUMENT\(A\)= -fapplication-extension' }

    runs-on: macos-latest

    env: ${{ matrix.env }}

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          brew install ${{ matrix.packages }} ffmpeg qt@5

      - name: Set environment path
        run: |
          echo "/usr/local/opt/qt5/bin" >> $GITHUB_PATH
          echo "/usr/local/opt/llvm@9/bin" >> $GITHUB_PATH

      - name: Build
        run: |
          qmake
          make CC=$CC CXX=$CXX CXXFLAGS="$CXXFLAGS"
          make install

      - name: Test
        run: |
          cd tests/
          qmake
          make CC=$CC CXX=$CXX
          export QT_LOGGING_RULES="qt.QtAVPlayer.debug=true"
          cd auto/integration/qavdemuxer
          ./tst_qavdemuxer --platform minimal
          cd ../
          cd qavplayer
          ./tst_qavplayer --platform minimal -maxwarnings 100000

  windows-vs-qmake-default:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Init vs environment
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Install wget & unzip
        run: |
          choco install wget unzip xidel

      - name: Install Qt 5.15
        uses: jurplel/install-qt-action@v2
        with:
          version: 5.15.2

      - name: Install FFmpeg
        shell: cmd
        run: |
          cd ..
          xidel https://github.com/BtbN/FFmpeg-Builds/releases -e "//a[contains(@href, '-gpl-shared-4.4.zip')]/@href[1]" --silent > ffmpeg.url
          xidel https://github.com/BtbN/FFmpeg-Builds/releases -e "(//a[contains(@href, '-gpl-shared-4.4.zip')])[1]/substring(., 0, string-length(.) - 3)" --silent > ffmpeg.name
          set /P FFMPEG_URL=< ffmpeg.url
          set /P FFMPEG_NAME=< ffmpeg.name
          wget https://github.com%FFMPEG_URL%
          unzip %FFMPEG_NAME%.zip
          ren %FFMPEG_NAME% ffmpeg
          dir ffmpeg
          dir ffmpeg\bin
          SET FFMPEG=%CD%\ffmpeg
          echo FFMPEG=%FFMPEG%>>%GITHUB_ENV%
          echo PATH=%FFMPEG%\lib;%FFMPEG%\bin;%PATH%>>%GITHUB_ENV%
          echo INCLUDE=%FFMPEG%\include;%INCLUDE%>>%GITHUB_ENV%
          echo LIB=%FFMPEG%\lib;%FFMPEG%\bin;%LIB%>>%GITHUB_ENV%

      - name: Build
        shell: cmd
        run: |
          qmake
          nmake
          nmake install

      - name: Test
        shell: cmd
        run: |
          set QT_LOGGING_RULES=qt.QtAVPlayer.debug=true
          set QT_FORCE_STDERR_LOGGING=1
          set QT_ASSUME_STDERR_HAS_CONSOLE=1
          cd tests/
          qmake
          nmake
          cd auto/integration/qavdemuxer
          release\tst_qavdemuxer.exe
          cd ../
          cd qavplayer
          release\tst_qavplayer.exe -maxwarnings 100000

  windows-mingw-qmake-default:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install wget & unzip
        run: |
          choco install wget unzip xidel

      - name: Install Qt 5.15
        uses: jurplel/install-qt-action@v2
        with:
          arch: win64_mingw81
          version: 5.15.2

      - name: Install FFmpeg
        shell: cmd
        run: |
          cd ..
          xidel https://github.com/BtbN/FFmpeg-Builds/releases -e "//a[contains(@href, '-gpl-shared-4.4.zip')]/@href[1]" --silent > ffmpeg.url
          xidel https://github.com/BtbN/FFmpeg-Builds/releases -e "(//a[contains(@href, '-gpl-shared-4.4.zip')])[1]/substring(., 0, string-length(.) - 3)" --silent > ffmpeg.name
          set /P FFMPEG_URL=< ffmpeg.url
          set /P FFMPEG_NAME=< ffmpeg.name
          wget https://github.com%FFMPEG_URL%
          unzip %FFMPEG_NAME%.zip
          ren %FFMPEG_NAME% ffmpeg
          dir ffmpeg
          dir ffmpeg\bin
          SET FFMPEG=%CD%\ffmpeg
          echo FFMPEG=%FFMPEG%>>%GITHUB_ENV%
          echo PATH=%FFMPEG%\lib;%FFMPEG%\bin;%PATH%>>%GITHUB_ENV%
          echo LIBRARY_PATH=%FFMPEG%\lib;%FFMPEG%\bin;%PATH%>>%GITHUB_ENV%
          echo INCLUDE=%FFMPEG%\include;%INCLUDE%>>%GITHUB_ENV%
          echo CPLUS_INCLUDE_PATH=%FFMPEG%\include;%CPLUS_INCLUDE_PATH%>>%GITHUB_ENV%
          echo LIB=%FFMPEG%\lib;%FFMPEG%\bin;%LIB%>>%GITHUB_ENV%

      - name: Build
        shell: cmd
        run: |
          qmake
          mingw32-make -j4
          mingw32-make install

      - name: Test
        shell: cmd
        run: |
          set QT_LOGGING_RULES=qt.QtAVPlayer.debug=true
          set QT_FORCE_STDERR_LOGGING=1
          set QT_ASSUME_STDERR_HAS_CONSOLE=1
          cd tests/
          qmake
          mingw32-make
          cd auto/integration/qavdemuxer
          release\tst_qavdemuxer.exe
          cd ../
          cd qavplayer
          release\tst_qavplayer.exe -maxwarnings 100000
